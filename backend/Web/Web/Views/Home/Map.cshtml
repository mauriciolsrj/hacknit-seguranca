
@{
    ViewBag.Title = "Mapa de ocorrências";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<p>
    filtros
</p>

<div id="map-canvas" style="width: 100%; height: 660px;"></div>

<script src="https://maps.googleapis.com/maps/api/js?key=AIzaSyDgD8wlqFoNS8SsupBFHR-9LzIxCrfSVuo&amp;sensor=false"></script>
<script>

    $(function () {
        var height = $(document).height() - ($("#footer").height() + $("#header-bottom").height());
        $("#map-canvas").height(height);

    });

    var map;
    var infoWindow;
    var markersData = [];

    $.ajax({
        url: "http://api.guarda.digital/api/RegistroOcorrencia/0/0/0/0",
        type: "GET",
        async: false,
        success: function (data) {
            //console.info(data);
            for (var i = 0; i < data.length; i++) {
                //console.info(data[i]);
                markersData.push(data[i]);
            }
        }
    });

    function initialize() {
        var mapOptions = {
            // center: new google.maps.LatLng(markersData[0].lat,markersData[0].lng),
            // zoom: 5,
            mapTypeId: 'roadmap',
        };

        map = new google.maps.Map(document.getElementById('map-canvas'), mapOptions);

        // cria a nova Info Window com referência à variável infowindow
        // o conteúdo da Info Window será atribuído mais tarde
        infoWindow = new google.maps.InfoWindow();

        // evento que fecha a infoWindow com click no mapa
        google.maps.event.addListener(map, 'click', function () {
            infoWindow.close();
        });

        // Chamada para a função que vai percorrer a informação
        // contida na variável markersData e criar os marcadores a mostrar no mapa
        displayMarkers();
    }
    google.maps.event.addDomListener(window, 'load', initialize);

    // Esta função vai percorrer a informação contida na variável markersData
    // e cria os marcadores através da função createMarker
    function displayMarkers() {

        // esta variável vai definir a área de mapa a abranger e o nível do zoom
        // de acordo com as posições dos marcadores
        var bounds = new google.maps.LatLngBounds();

        // Loop que vai estruturar a informação contida em markersData
        // para que a função createMarker possa criar os marcadores
        for (var i = 0; i < markersData.length; i++) {

            var latlng = new google.maps.LatLng(markersData[i].latitude, markersData[i].longitude);
            var ocorrencia = markersData[i].ocorrencia;
            var id = markersData[i].id;
            var tipo = markersData[i].tipo;
            var inicio = markersData[i].inicio;
            var fim = markersData[i].fim;
                                  
            createMarker(latlng, ocorrencia, tipo, inicio, id, fim);
            
            // Os valores de latitude e longitude do marcador são adicionados à
            // variável bounds
            bounds.extend(latlng);
        }

        // Depois de criados todos os marcadores
        // a API através da sua função fitBounds vai redefinir o nível do zoom
        // e consequentemente a área do mapa abrangida.
        map.fitBounds(bounds);
    }

    // Função que cria os marcadores e define o conteúdo de cada Info Window.
    function createMarker(latlng, ocorrencia, tipo, inicio, id, fim) {
        var marker = new google.maps.Marker({
            map: map,
            position: latlng,
            title: ocorrencia
        });

        if (ocorrencia == 'Meio ambiente')
            marker.setIcon('http://maps.google.com/mapfiles/ms/icons/green-dot.png');
        if (ocorrencia == 'Contravenções')
            marker.setIcon('http://maps.google.com/mapfiles/ms/icons/purple-dot.png');
        if (ocorrencia == 'Posturas')
            marker.setIcon('http://maps.google.com/mapfiles/ms/icons/yellow-dot.png');
        if (ocorrencia == 'Assistência')
            marker.setIcon('http://maps.google.com/mapfiles/ms/icons/blue-dot.png');
        if (ocorrencia == 'Trânsito')
            marker.setIcon('http://maps.google.com/mapfiles/ms/icons/orange-dot.png');
        
        // Evento que dá instrução à API para estar alerta ao click no marcador.
        // Define o conteúdo e abre a Info Window.
        google.maps.event.addListener(marker, 'click', function () {

            // Variável que define a estrutura do HTML a inserir na Info Window.
            var iwContent = '<div id="content" style="margin-left:5px;margin-right:0;">' +
                '<div class="bg_white" style="margin-left:8px;"><h5 class="center">' + ocorrencia + '<p class="nome-mapa">' + tipo+'</p></h5></div><br>' +
                '</div>';

            // O conteúdo da variável iwContent é inserido na Info Window.
            infoWindow.setContent(iwContent);

            // A Info Window é aberta.
            infoWindow.open(map, marker);
        });
    }

</script>
